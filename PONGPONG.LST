C51 COMPILER V9.55   PONGPONG                                                              04/22/2018 13:18:18 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE PONGPONG
OBJECT MODULE PLACED IN PONGPONG.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe PONGPONG.c DB OE BR INCDIR(C:\SiLabs\MCU\Inc)

line level    source

   1          #include <C8051F020.h>
   2          #include <lcd.h>
   3          #define H_PONG_DRIVER
   4          
   5          
   6          unsigned int pot, pot2;
   7          sbit BTN1 = P2^2;
   8          unsigned char paddle_top, paddle_height, paddle_bottom;
   9          
  10          unsigned char put_char (unsigned char row, unsigned char col, char ch);
  11          void init_game();
  12          void init_text();
  13          void move_paddle();
  14          void draw_paddle (int x, int y, char pad_type);
  15          
  16          
  17          
  18          void main(void)
  19          {
  20   1      
  21   1      //===========================================================================
  22   1      //Init
  23   1      //===========================================================================
  24   1      
  25   1      
  26   1              WDTCN = 0xde;  // disable watchdog
  27   1          WDTCN = 0xad;
  28   1          XBR2 = 0x40;   // enable port output
  29   1          XBR0 = 4;      // enable uart 0
  30   1              REF0CN = 7;
  31   1              OSCXCN = 0x67; // turn on external crystal
  32   1              TMOD = 0x20;   // wait 1ms using T1 mode 2
  33   1              TH1 = -167;    // 2MHz clock, 167 counts - 1ms
  34   1              TR1 = 1;
  35   1              while ( TF1 == 0 ) { }          // wait 1ms
  36   1              while ( !(OSCXCN & 0x80) ) { }  // wait till oscillator stable
  37   1              OSCICN = 8;    // switch over to 22.1184MHz
  38   1      
  39   1      
  40   1              T2CON  =  0x08; //Set the timer auto-reload   
  41   1              RCAP2H = -180 ; //22.1184E6/12/1024 = 1800
  42   1              RCAP2L = 3;
  43   1              TR2    =  1;
  44   1              //IE     =  0x80; //0x80; //do not enable timer 2 interrupt
  45   1              EIE2   =  0x02; //enable ADC interrupt
  46   1              ADC0CF =  0x40; //set conversion clock [(22.184Hz/2.5MHz) - 1] = 8
  47   1              ADC0CN =  0x8C; //enable ADC, starts conversion when T2 overfows
  48   1              REF0CN =  0x07; //set reference voltage 
  49   1      
  50   1      
  51   1      
  52   1      //----------------------        
  53   1      //initializing game
  54   1      //----------------------
  55   1              init_lcd();//init screen
C51 COMPILER V9.55   PONGPONG                                                              04/22/2018 13:18:18 PAGE 2   

  56   1              init_text(); //displays text and waits for button press to start
  57   1      
  58   1      //----------------------        
  59   1      //Playing game
  60   1      //----------------------
  61   1              while(1) {
  62   2                      move_paddle();
  63   2                      refresh_screen();
  64   2      
  65   2                      draw_paddle(0, pot, 11);
  66   2              }
  67   1      }
  68          
  69                  
  70          
  71          
  72          void draw_paddle (int x, int y, char pad_type) {
  73   1              long mask;
  74   1              //unsigned char paddle_top, paddle_height, paddle_bottom;
  75   1                      switch(pad_type)
  76   1                      {
  77   2                              case 0:
  78   2                                      if(y>54) y = 54;
  79   2                                      mask = 0xffl;  //assign as long
  80   2                                      paddle_height = 8;
  81   2                                      break;
  82   2                              case 1:
  83   2                                      if(y>50) y = 50;
  84   2                                      mask = 0xfffl;
  85   2                                      paddle_height = 12;
  86   2                                      break;
  87   2                              case 2:
  88   2                                      if(y > 46) y = 46;
  89   2                                      mask = 0xffffl; //length of paddles
  90   2                                      paddle_height = 16;
  91   2                                      break;
  92   2                              case 3:
  93   2                                      while(x<1024)
  94   2                                              {
  95   3                                              screen[x] = 0xffl;
  96   3                                                  screen[x+1] = 0xffl;
  97   3                                                      x = x+128;
  98   3                                                      paddle_top = 2;
  99   3                                                      paddle_bottom = 61;
 100   3                                                      paddle_height = 60;
 101   3                                              }
 102   2                                      
 103   2                                      return;
 104   2                      }
 105   1              if (y<2) y =2;
 106   1              mask = mask <<(y%8);
 107   1              x+= (y/8)*128;
 108   1              screen[x] |= mask;
 109   1              screen[x+1] |= mask;
 110   1              screen[x+128] |= mask >> 8;
 111   1              screen[x+129] |= mask >> 8;
 112   1              screen[x+256] |= mask >> 16;
 113   1              screen[x+257] |= mask >> 16;
 114   1              paddle_top = y;  // store
 115   1              paddle_bottom = y+paddle_height-1; //
 116   1      
 117   1      
C51 COMPILER V9.55   PONGPONG                                                              04/22/2018 13:18:18 PAGE 3   

 118   1      }
 119          
 120          
 121          
 122          
 123          
 124          
 125          //==============================================================================
 126          //put_char
 127          //inserts characters
 128          //==============================================================================
 129                  unsigned char put_char (unsigned char row, unsigned char col, char ch)
 130                  {
 131   1                              int loc = row * 128 + col;
 132   1                              int font = (ch - ' ') * 5;
 133   1                              char i;
 134   1                              for (i=0; i<5; i++)
 135   1                              {
 136   2                                      screen[loc +i] = font5x8[font+i];
 137   2                              }
 138   1                              return (0);
 139   1              }
 140          
 141          
 142          
 143          
 144          
 145          //============================================================================
 146          //init_game
 147          //inits the game (bounds and net)
 148          //============================================================================
 149                  void init_game ()
 150                  {
 151   1                      unsigned int i;
 152   1                                      //TOP BOUNDARY
 153   1                                      for(i=0; i<127; i++) {
 154   2                                              screen[i] = 0x0C; 
 155   2                                      }
 156   1                                      //BOTTOM BOUNDARY
 157   1                                      for(i=0; i<127; i++) {
 158   2                                              screen[896+i] = 0xC0; 
 159   2                                      }
 160   1                                      //NET
 161   1                                      for(i=63; i<960; i++) {
 162   2                                              screen[i+1] = 0xCC;
 163   2                                              screen[i] = 0xCC; 
 164   2                                              i= i+127;
 165   2                                      }
 166   1              }
 167          
 168          
 169          
 170          
 171          
 172          //============================================================================
 173          //init_text
 174          //inits the text HELLO PRESS START TO PLAY! Waits for button prexs to start
 175          //============================================================================
 176          void init_text(void) {
 177   1      
 178   1                      put_char(1,0, 'H'); put_char(1,6, 'E'); put_char(1,12,'L');     put_char(1,18,'L'); //displays HELLO
 179   1                      put_char(1,24,'O'); put_char(1,32,' ');
C51 COMPILER V9.55   PONGPONG                                                              04/22/2018 13:18:18 PAGE 4   

 180   1      
 181   1                      put_char(1,38,'P'); put_char(1,44,'R'); put_char(1,50,'E'); put_char(1,56,'S'); //displays PRESS
 182   1                      put_char(1,62,'S'); put_char(1,68,' '); 
 183   1              
 184   1                      put_char(1,74,'S'); put_char(1,80,'T'); put_char(1,84,'A'); put_char(1,90,'R'); //displays START TO
 185   1                      put_char(1,96,'T'); put_char(1,102,' '); put_char(1,108,'T'); put_char(1,114,'O'); 
 186   1      
 187   1                      put_char(3,52, 'P'); put_char(3,58, 'L'); put_char(3,64, 'A'); put_char(3,70, 'Y'); //PLAY!
 188   1                      put_char(3,76,'!');     put_char(6,30,' ');     put_char(6,36,' '); put_char(6,42,' ');
 189   1      
 190   1                      refresh_screen();
 191   1                      while(BTN1) {
 192   2      
 193   2                      }
 194   1                      blank_screen();
 195   1      
 196   1      }
 197          
 198          
 199          
 200          
 201          //============================================================================
 202          //move_paddle
 203          //moves the paddles
 204          //============================================================================
 205          void move_paddle() {
 206   1              blank_screen();
 207   1              init_game();
 208   1      
 209   1              AMX0SL = 0x00;  //AIN0
 210   1              ADC0CF = 0x40;
 211   1              AD0INT = 0; // clear flag
 212   1              AD0BUSY = 1;
 213   1              while(AD0INT == 0)
 214   1              {}
 215   1              pot = ADC0H*4;
 216   1      
 217   1      
 218   1              AMX0SL = 0x01; //AIN2
 219   1              ADC0CF = 0x40;
 220   1              AD0INT = 0; //clear flag
 221   1              AD0BUSY = 1;
 222   1              while(AD0INT == 0)
 223   1              {}
 224   1              pot2 = ADC0H*4;
 225   1                              
 226   1      }
 227          
 228          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1000    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
